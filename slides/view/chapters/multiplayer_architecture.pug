include ../mixins/containers.pug
include ../mixins/containers_aph.pug

- var imgAssets = '../assets/multiplayer_architecture/';

+mchapter('Networking Architecture', imgAssets+'chapter_architecture.svg')
+mcontainer('Multiplayer')
    +frameShard.width-85p.top-30p.left-7p
        ul
            li.fragment.fade-up offers a capability for multiple players to act within the same world at the same time 
            li.fragment.fade-up complex feature that has a significant impact on the game architecture, touching almost every fundamental structure
+frameInbox('Multiplayer categories')
    div
        ul.spacing-3xl
            li.fragment single-screen multiplayer
                .top-20.right-20
                    img.width-500(src=imgAssets+'types_single.jpg')
            li.fragment split-screen multiplayer
                .top-200.right-400
                    img.width-500(src=imgAssets+'types_split.jpg')
            li.fragment networked multiplayer
                .top-400.right-20
                    img.width-500(src=imgAssets+'types_multi.jpg')
            li.fragment MMOG
                .top-550.right-400
                    img.width-500(src=imgAssets+'types_mmo.jpg')
            li.fragment Cloud Gaming
+frameInbox('Multiplayer history')
    div
        .list-title.fragment
            p Local multiplayer games
            ul.leading-lg
                li.fragment Tennis for Two (1958)
                li.fragment Spacewar! (1962)
                    .top-20.right-450
                        img.width-380(src=imgAssets+'history_spacewar.jpg')
        .list-title.fragment
            p Networked multiplayer games
            ul.leading-lg
                li.fragment Empire (1973)
                    .top-80.right-20
                        img.width-400(src=imgAssets+'history_empire.jpg')
                li.fragment Maze War (1974)
        .list-title.fragment
            p Local area network games
            ul.leading-lg
                li.fragment Doom (1993)
                    .top-300.right-450
                        img.width-380(src=imgAssets+'history_doom.jpg')
                li.fragment Duke Nukem 3D (1996)
        .list-title.fragment
            p Online games
            ul.leading-lg
                li.fragment Quake (1996)
                    .top-500.right-20
                        img.width-400(src=imgAssets+'history_quake.jpg')
                li.fragment Unreal (1998)
        .list-title.fragment
            p MMO
            ul.leading-lg
                li.fragment Ultima Online (1997)
                    .top-600.right-450
                        img.width-380(src=imgAssets+'history_ultima.jpg')
                li.fragment World of Warcraft (2004)
+frameInbox('Libraries')
    div
        .list-title.fragment
            p Torque Network Library (opentnl)
            ul
                li.fragment uses ghost structures for object replication
                li.fragment <a href="https://github.com/kocubinski/opentnl">https://github.com/kocubinski/opentnl</a>
        .list-title.mt-10.fragment
            p ReplicaNet
            ul
                li.fragment powerful library for object sharing (sessions)
                li.fragment expensive
        .list-title.mt-10.fragment
            p RakNet
            ul
                li.fragment complex networking library
                li.fragment free since 2014
                li.fragment <a href="https://github.com/facebookarchive/RakNet">https://github.com/facebookarchive/RakNet</a>
        .list-title.mt-10.fragment
            p NetStalker
            ul
                li.fragment library for interpolated object replication
                li.fragment created as a bachelor thesis at FEL CTU
                li.fragment <a href="https://github.com/smrkous/nsl">https://github.com/smrkous/nsl</a>
+frameInbox('Issues')
    .important-green
        ul
            li.fragment the main objective - how to synchronize several universes
            li.fragment all clients have to achieve a <span class="highlight-2">certain</span> degree of synchrony
            li.framgnet attributes that affect the gameplay: <span class="highlight-2">capacity, speed, latency, jitter, packet loss</span> 
            li.fragment there is no known real-world picture for this type of problem
            li.fragment it's easy to convert multiplayer game into a single-player game
            li.fragment it's very difficult to implement multiplayer features into a single-player game
        .list-title.fragment
            p Methods
            ul
                li.fragment transfering a complete game state to all clients - for simple games
                li.fragment transfering a minimal subset for recostructing the complete information - more common
        .list-title.fragment
            p Topologies
            ul
                li.fragment peer-to-peer
                li.fragment client-server
+frameInbox('Peer-to-peer architecture')
    .important-orange
        ul
            li.fragment(data-fragment-index='1') each device exchanges data with each other in a fully connected graph
            li.fragment(data-fragment-index='2') used in <span class="highlight">Doom</span>, early <span class="highlight">Command & Conquer</span> series, <span class="highlight">Age of Empires</span>, <span class="highlight">Starcraft</span>
            li.fragment(data-fragment-index='3') given 
                include ../../assets/multiplayer_architecture/equations_generated/peer_to_peer_01.svg
                |&nbsp;peers, each must have 
                include ../../assets/multiplayer_architecture/equations_generated/peer_to_peer_02.svg
                |&nbsp;connections -> 
                include ../../assets/multiplayer_architecture/equations_generated/peer_to_peer_03.svg
                |&nbsp;in total
            li.fragment(data-fragment-index='4') methods: single master, partial authority, full replication
        .space-xl
        .text-center.fragment(data-fragment-index='1')
            img.height-300(src=imgAssets+'arch_peer_to_peer.svg')
+frameInbox('Peer-to-peer architecture')
    .important-green
        .list-title.fragment
            p Single master
            ul
                li.fragment one machine is chosen to be the <span class="highlight-2">game master</span>
        .list-title.fragment
            p Partial authority
            ul
                li.fragment certain peers have authority over certain parts of the game 
                li.fragment better bandwidth and processing power balance
                li.fragment difficult to implement and debug
                li.highlight-2.fragment each dynamic object belongs to exactly one machine
                li.fragment if one player drops out the game, all of the objects over which it had authority must be picked up by other machines
        .list-title.fragment
            p Full replication
            ul
                li.fragment each peer executes the game logic and only events are exchanged
                li.fragment hard to synchronize to avoid alternate realities
                li.fragment difficult to get the same results (floating point calculations)
                li.fragment runs well for a few players over LAN but terribly over the internet
+frameInbox('Peer-to-peer games')
    .important-green
        .list-title.fragment
            p Doom (1993)
            ul
                li.fragment 14.4 kbps PPP or 28.8 kbps SLIP
                li.fragment each turn player inputs were exchanged with other peers
                li.fragment you had to wait for the inputs from the most lagged player
                li.fragment every 30ms, the input from each player is sampled into a <span class="highlight-2">tic command</span>
                li.fragment when the tic commands for all players have been received, the game advances its state
        .list-title.fragment
            p Age of Empires (1997)
            ul
                li.fragment for 8-player battle there could be up to 400 units
                li.fragment used <span class="highlight-2">Turn Timer</span> - queue for commands
                li.fragment AoE synchronizes the commands each player issued, rather than units
                li.fragment all commands during 200ms are saved into a buffer
                li.fragment when the 200-ms-frame is over, all commands for a player's turn are transmitted to others
+frameInbox('Client-Server architecture')
    .important-orange
        ul
            li.fragment(data-fragment-index='1')
                include ../../assets/multiplayer_architecture/equations_generated/client_server_01.svg
                |&nbsp;devices, 
                include ../../assets/multiplayer_architecture/equations_generated/client_server_02.svg
                |&nbsp;connections
            li.fragment(data-fragment-index='2') server must handle 
                include ../../assets/multiplayer_architecture/equations_generated/client_server_03.svg
                |&nbsp;more messages per second
            li.fragment(data-fragment-index='3') server quickly becomes the bottleneck (lack of power and bandwidth)
            li.fragment(data-fragment-index='5') <span class="highlight">Dedicated server</span> - only runs the game state and communicates
            li.fragment(data-fragment-index='6') <span class="highlight">Listen server</span> - server is an active participant in the game itself
        .text-center.mt-40.fragment(data-fragment-index='1')
            img.height-400(src=imgAssets+'arch_client_server.svg')
+frameInbox('Example: Quake')
    .important-green
        ul
            li.fragment the first game that used <span class="highlight-2">partial reliability</span>
            li.fragment each client acts as a dumb terminal
            li.fragment outputs are picked up by the <span class="highlight-2">prediction layer</span>
            li.fragment the server runs at <span class="highlight-2">20 FPS</span>, while the client runs at <span class="highlight-2">60 FPS</span>
        .list-title.fragment
            p Command
            ul
                li.fragment the elementary unit of communication
                li.fragment used to udpate a position of the player, orientation, HP,...
                li.highlight-2.fragment reliable commands (with impact on the game state) have to be confirmed
        .text-center.mt-30.fragment
            figure
                img.height-260(src=imgAssets+'quake_netchannel.svg')
                p NetChannel header
+frameInbox('Example: Starsiege Tribes')
    div
        ul
            li.fragment sci-fi FPS, released in 1998
                .top-30.right-30
                    img.height-400(src=imgAssets+'starsiege.jpg')
                .bottom-30.right-30
                    img.height-400(src=imgAssets+'starsiege2.jpg')
            li.fragment highly optimized networking model
            li.fragment supported up to 128 players over LAN or modem (56.6 kbps)
        .list-title.mt-40.fragment
            p Data categories
            ul
                li.fragment non-guaranteed data: nonessential to the game
                li.fragment guaranteed data: guarantees both arrival and ordering (events)
                li.fragment guaranteed critical data: highest priority (player movement)
                li.fragment most recent state data: hit points
+frameInbox('Example: Starsiege networking model')
    div
        ul.leading-lg
            li.fragment <span class="highlight">Game Simulation Layer</span> - determines what particular client needs to know
            li.fragment <span class="highlight">Ghost Manager</span> - replicates or "ghosts" dynamic objects that are relevant
            li.fragment <span class="highlight">Move Manager</span> - transmits movement data of the player as quickly as possible
            li.fragment <span class="highlight">Event Manager</span> - maintains a queue of events generated by the simulation
            li.fragment <span class="highlight">Stream Manager</span> - sends data to the connection manager
            li.fragment <span class="highlight">Connection Manager</span> - manages a notification of delivery status
            li.fragment <span class="highlight">Platform Packet Module</span> - socket API wrapper, implements reliability layer
        .text-center.mt-20
            img.height-450(src=imgAssets+'starsiege_model.svg')